@{
    ViewBag.Title = "Quản lý thuộc tính";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutPage.cshtml";
    var groupAttr = (IEnumerable<AttributeGroup>)ViewBag.GroupAttr;
}

<div class="container">
    <!-- Page-Title -->
    <div class="row">
        <div class="col-sm-12">
            <div class="btn-group pull-right m-t-15">
                <button onclick="add_new()" class="btn btn-primary waves-effect waves-light">
                    <span class="btn-label">
                        <i class="zmdi zmdi-assignment"></i>
                    </span>Thêm mới
                </button>
            </div>
            <h4 class="page-title">@ViewBag.Title</h4>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-12">
            <div class="card-box table-responsive">
                <div id="datatable_wrapper" class="dataTables_wrapper form-inline dt-bootstrap4 no-footer">
                    <div class="col-md-12">
                        <table id="datatable" class="table table-striped table-bordered dataTable no-footer" role="grid" aria-describedby="datatable_info">
                            <thead>
                                <tr role="row">
                                    <th width="10%">Mã thuộc tính</th>
                                    <th>Tên thuộc tính</th>
                                    <th>Nhóm thuộc tính</th>
                                    <th width="85px"></th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modal_form_attr" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <form action="#" method="POST" id="form-attr" class="form-horizontal">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h3 class="modal-title">Thêm thuộc tính</h3>
                </div>
                <div class="modal-body form">
                    <input type="hidden" value="" name="id" />
                    <div class="form-body">
                        <div class="form-group">
                            <label class="control-label col-md-3">Nhóm thuộc tính</label>
                            <div class="col-md-9">
                                <select name="group_attr" class="form-control">
                                    <option value="">-- Nhóm chung --</option>
                                    @foreach(var group in groupAttr){
                                        <option value="@group.AttrGroupID">@group.AttrGroupName</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-3">Tên thuộc tính</label>
                            <div class="col-md-9">
                                <input data-rule-required="true" data-msg-required="Vui lòng tên thuộc tính" name="attr-name" placeholder="Tên thuộc tính" class="form-control" type="text">
                            </div>
                        </div>
                    </div>

                </div>
                <div class="modal-footer">
                    <button type="submit" id="btnSave" class="btn btn-primary">Lưu</button>
                    <button type="button" class="btn btn-danger" data-dismiss="modal">Hủy</button>
                </div>
            </form>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->
@section scripts{
    <script>
        var save_method;
        var attr_id;
        var typingTimer;
        var table = $('#datatable').DataTable({
            processing: true, //Feature control the processing indicator.
            serverSide: true, //Feature control DataTables' server-side processing mode
            autoWidth: false,
            ajax: {
                url: "/Admin/Attr/LoadAttr",
                type: "GET"
            },
            bInfo: false,
            bPaginate: false,
            columnDefs: [
                {
                    targets: 3,
                    render: function (data, type, full, meta) {
                        if (type === 'display') {
                            data = '<div style="min-width:70px" class="btn-group" role="group"><button onclick="edit_attr(' + full[0] + ')" class="edit btn btn-info btn-sm"><span class="glyphicon glyphicon-edit" aria-hidden="true">Sửa</span></a><button type="button" onclick="delete_attr(' + full[0] + ')" class="delete btn btn-danger btn-sm m-l-5"><span class="glyphicon glyphicon-trash" aria-hidden="true"></span>Xóa</button></div>';
                        }
                        return data;
                    }
                },
                {
                    "defaultContent": "-",
                    "targets": "_all"
                },
                {
                    targets: 2,
                    render: function (data, type, full, meta) {
                        if (type === 'display') {
                            if (data.group_id == 0) {
                                data = '<span class="label label-default">'+data.group_name+'</span>';
                            } else {
                                data = '<span class="label label-warning">' + data.group_name + '</span>';
                            }
                        }
                        return data;
                    }
                },
            ],
            initComplete: function () {
                $("div.dataTables_filter input").unbind();
                $("div.dataTables_filter input").keyup(function (e) {
                    clearTimeout(typingTimer);
                    var search_value = this.value;
                    typingTimer = setTimeout(function () {
                        table.search(search_value).draw();
                    }, 300);
                });
            }
        });

        var validateForm = $('#form-attr').validate({
            submitHandler: function () {
                if (save_method == 'add') {
                    var group_id = $('select[name=group_attr] option:selected').val();
                    $.ajax({
                        url: '/Admin/Attr/InsertAttr',
                        type: 'POST',
                        data: { AttrName: $('input[name=attr-name]').val(), AttriGroupID: group_id },
                        dataType: 'JSON',
                        success: function (data) {
                            if (data.status == 'success') {
                                swal({
                                    title: data.title,
                                    text: data.message,
                                    type: data.status,
                                    timer: 1000
                                });
                                table.ajax.reload(null, false);
                                $('#modal_form_attr').modal('hide');
                            } else {
                                swal({
                                    title: data.title,
                                    text: data.message,
                                    type: data.status
                                });
                            }
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            swal('Lỗi', 'Đã có lỗi xảy ra', 'error');
                        }
                    });
                } else if (save_method == 'edit') {
                    var group_attr_id = $('select[name=group_attr] option:selected').val();
                    var attr_Name = $('input[name=attr-name]').val();
                    $.ajax({
                        url: '/Admin/Attr/UpdateAttr',
                        data: { AttriGroupID: group_attr_id, AttrID: attr_id, AttrName: attr_Name },
                        type: 'POST',
                        dataType: 'JSON',
                        success: function (data) {
                            if (data.status == 'success') {
                                swal({
                                    title: data.title,
                                    text: data.message,
                                    type: data.status,
                                    timer: 1000,

                                });
                                $('#modal_form_attr').modal('hide');
                                setTimeout(function () {
                                    table.ajax.reload(null, false);
                                }, 1000);
                            } else {
                                swal({
                                    title: data.title,
                                    text: data.message,
                                    type: data.status
                                });
                            }
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            swal('Lỗi', 'Đã có lỗi xảy ra', 'error');
                        }
                    });
                }
            }
        });

        function add_new() {
            save_method = 'add';
            attr_id = 0;
            validateForm.resetForm();
            $('#form-attr')[0].reset();
            $('#modal_form_attr').modal('show');
        }

        function edit_attr(id) {
            save_method = 'edit';
            validateForm.resetForm();
            $('#form-attr')[0].reset();
            $.getJSON('/Admin/Attr/AttrInfo', { id: id }).done(function (data) {
                if (data.status) {
                    $('#modal_form_attr .modal-title').html('Chỉnh sửa: <strong>' + data.data.attr_name + '</strong>');
                    $('input[name=attr-name]').val(data.data.attr_name);
                    $('select[name=group_attr]').val(data.data.attr_group_id);
                    attr_id = data.data.attr_id;
                    $('#modal_form_attr').modal('show');
                } else {
                    swal('Lỗi', 'Đã có lỗi xảy ra', 'error');
                }
            }).fail(function () {
                swal('Lỗi', 'Đã có lỗi xảy ra', 'error');
            });
        }

        function delete_attr(attr_id) {
            swal({
                title: 'Xóa thuộc tính',
                text: 'Bạn có muốn xóa thuộc tính này chứ, lưu ý khi xóa sẽ không thể khôi phục lại được, hãy cân nhắc trước khi xóa',
                type: 'warning',
                showCancelButton: true,
                confirmButtonText: "Vâng, xóa nó",
                cancelButtonText: 'Hủy',
                closeOnConfirm: false
            }, function (isConfirm) {
                if (isConfirm) {
                    $.ajax({
                        url: '/Admin/Attr/DeleteAttr',
                        data: { id: attr_id },
                        type: 'POST',
                        dataType: 'JSON',
                        success: function (data) {
                            if (data.status == 'success') {
                                swal({
                                    title: data.title,
                                    text: data.message,
                                    type: data.status,
                                    timer: 1000
                                });
                                table.ajax.reload(null, false);
                                $('#modal_form_group_attr').modal('hide');
                            } else {
                                swal({
                                    title: data.title,
                                    text: data.message,
                                    type: data.status
                                });
                            }
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            swal('Lỗi', 'Đã có lỗi xảy ra', 'error');
                        }
                    });
                }
            });
        }


    </script>
}