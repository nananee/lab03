@model AdminProductViewModel

@{
    ViewBag.Title = "Thêm sản phẩm";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutPage.cshtml";
    var groups = (IEnumerable<GroupProduct>)ViewBag.GroupProducts;
    var attrGroup = (IEnumerable<AttributeGroup>)ViewBag.AttrGroup;
    var drDowAttrGroup = attrGroup.Select(g => new SelectListItem() { Text = g.AttrGroupName, Value = g.AttrGroupID.ToString() });
}

<div class="container">
    @using (Html.BeginForm("Edit", "Product", FormMethod.Post, new { @class = "form-horizontal", id = "myForm" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m=>m.ProductID)
    <!-- Page-Title -->
        <div class="row">
            <div class="col-sm-12">
                <div class="btn-group pull-right m-t-15">
                    <button type="submit" name="save" class="btn btn-primary waves-effect waves-light">
                        <span class="btn-label">
                            <i class="zmdi zmdi-assignment"></i>
                        </span>Lưu
                    </button>

                    <button type="submit" name="save-continue" class="btn btn-primary waves-effect waves-light m-l-5">
                        <span class="btn-label">
                            <i class="zmdi zmdi-assignment"></i>
                        </span>Lưu & Sửa
                    </button>
                </div>

                <h4 class="page-title">@ViewBag.Title</h4>
            </div>
        </div>

    <!--Form-->
        <div class="row">
            <div class="col-sm-12">
                <div class="nav-tabs-custom"></div>
                <div class="card-box">
                    <!-- Nav tabs -->
                    <ul class="nav nav-tabs m-b-15" id="myTab" role="tablist">
                        <li class="nav-item">
                            <a class="nav-link active" data-toggle="tab" href="#info" role="tab">Thông tin SP</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" data-toggle="tab" href="#attr" role="tab">Thuộc tính</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" data-toggle="tab" href="#color" role="tab">Màu sắc</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" data-toggle="tab" href="#picture" role="tab">Hình ảnh</a>
                        </li>
                    </ul>

                    <!-- Tab panes -->
                    <div class="tab-content">
                        <div class="tab-pane active" id="info" role="tabpanel">
                            <div class="row">
                                <div class="col-sm-12">
                                    <div class="card card-block">
                                        <h5 class="card-title">Thông tin chung</h5>
                                        <div class="form-group m-t-15 row">
                                            <div class="col-sm-2 align-right">
                                                @Html.LabelFor(m => m.ProductName, new { @class = "control-label m-t-5" })
                                            </div>
                                            <div class="col-md-7">
                                                @Html.TextBoxFor(m => m.ProductName, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.ProductName)
                                            </div>
                                        </div>

                                        <div class="form-group m-t-15 row">
                                            <div class="col-sm-2 align-right">
                                                @Html.LabelFor(m => m.GroupID, new { @class = "control-label m-t-5" })
                                            </div>
                                            <div class="col-md-7 dropdown-submit-input">
                                                @Html.HiddenFor(item => item.GroupID)
                                                <button class="btn btn-secondary dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                    @ViewBag.GroupName
                                                    <span class="caret"></span>
                                                </button>
                                                <ul class="dropdown-menu multi-level" id="list-group" role="menu" aria-labelledby="dropdownMenu">
                                                    @DropdownTree(groups.Where(item => item.ParentGroupID == null))
                                                </ul>
                                                @Html.ValidationMessageFor(model => model.GroupID)
                                            </div>
                                        </div>

                                        <div class="form-group m-t-15 row">
                                            <div class="col-sm-2 align-right">
                                                @Html.LabelFor(m => m.Detail, new { @class = "control-label m-t-5" })
                                            </div>
                                            <div class="col-md-7">
                                                @Html.TextAreaFor(m => m.Detail, new { @class = "form-control", id = "product-detail" })
                                                @Html.ValidationMessageFor(model => model.Detail)
                                            </div>
                                        </div>

                                        <div class="form-group m-t-15 row">
                                            <div class="col-sm-2 align-right">
                                                @Html.LabelFor(m => m.Price, new { @class = "control-label m-t-5" })
                                            </div>
                                            <div class="col-md-3">
                                                @Html.TextBoxFor(m => m.Price, new { @class = "form-control autonumber", id = "txtPrice", data_a_sign = " VNĐ", data_v_max = "100000000" })
                                                @Html.ValidationMessageFor(model => model.Price)
                                            </div>
                                        </div>

                                        <div class="form-group m-t-15 row">
                                            <div class="col-sm-2 align-right">
                                                @Html.LabelFor(m => m.SalePrice, new { @class = "control-label m-t-5" })
                                            </div>
                                            <div class="col-md-3">
                                                @Html.TextBoxFor(m => m.SalePrice, new { @class = "form-control autonumber", id = "txtSalePrice", data_a_sign = " VNĐ", data_v_max = "100000000" })
                                                @Html.ValidationMessageFor(model => model.SalePrice)
                                            </div>
                                        </div>

                                        <div class="form-group m-t-15 row">
                                            <div class="col-sm-2 align-right">
                                                @Html.LabelFor(m => m.Stock, new { @class = "control-label m-t-5" })
                                            </div>
                                            <div class="col-md-3">
                                                @Html.TextBoxFor(m => m.Stock, new { @class = "form-control autonumber", data_v_max = "10000" })
                                                @Html.ValidationMessageFor(model => model.Stock)
                                            </div>
                                        </div>

                                        <div class="form-group m-t-15 row">
                                            <div class="col-sm-2 align-right">

                                            </div>
                                            <div class="col-md-3">
                                                <div class="checkbox checkbox-custom">
                                                    @Html.CheckBoxFor(m => m.Active, new { id = "chkActive" }, false)
                                                    <label for="chkActive">
                                                        Kích hoạt
                                                    </label>
                                                </div>
                                                @Html.ValidationMessageFor(model => model.Active)
                                            </div>
                                        </div>

                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="tab-pane" id="attr" role="tabpanel">
                            <div class="row">
                                <div class="col-sm-12">
                                    <div class="card card-block">
                                        <h5 class="card-title">Quản lý thuộc tính</h5>
                                        <br />
                                        <button type="button" class="btn btn-success" onclick="add_attr()"><i class="glyphicon glyphicon-plus"></i> Thêm thuộc tính</button>
                                        <button type="button" class="btn btn-default" onclick="reload_table('attr')"><i class="glyphicon glyphicon-refresh"></i> Tải lại</button>
                                        <br />
                                        <br />
                                        <table id="table-attr" class="table table-striped table-bordered" cellspacing="0" width="100%">
                                            <thead>
                                                <tr>
                                                    <th>Thuộc tính</th>
                                                    <th>Giá trị</th>
                                                    <th style="width:125px;">Action</th>
                                                </tr>
                                            </thead>
                                            <tbody></tbody>

                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="tab-pane" id="color" role="tabpanel">
                            <div class="row">
                                <div class="col-sm-12">
                                    <div class="card card-block">
                                        <h5 class="card-title">Quản lý Màu sắc</h5>
                                        <br />
                                        <button type="button" class="btn btn-success" onclick="add_color();"><i class="fa fa-plus-circle"></i> Thêm màu sắc</button>
                                        <button type="button" class="btn btn-default" onclick="reload_table('color')"><i class="fa fa-refresh"></i> Tải lại</button>
                                        <br />
                                        <br />
                                        <table id="table-color" class="table table-striped table-bordered" cellspacing="0" width="100%">
                                            <thead>
                                                <tr>
                                                    <th>Màu sắc</th>
                                                    <th>Số lượng</th>
                                                    <th style="width:125px;">Action</th>
                                                </tr>
                                            </thead>
                                            <tbody></tbody>

                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="tab-pane" id="picture" role="tabpanel">
                            <div class="row">
                                <div class="col-sm-12">
                                    <div class="card card-block">
                                        <h5 class="card-title">Quản lý hình ảnh</h5>
                                            <div class="row">
                                                <div class="col-md-9 center-block">
                                                    <table id="table-image" class="table table-striped table-bordered" cellspacing="0" width="100%">
                                                        <thead>
                                                            <tr>
                                                                <th>Hình ảnh</th>
                                                                <th>Đường dẫn</th>
                                                                <th style="width:125px;">Hành động</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody></tbody>

                                                    </table>
                                                </div>
                                            </div>
                                        </div>

                                    <div class="card card-block">
                                        <h5 class="card-title">Thêm hình ảnh mới</h5>

                                        <div class="uploader">
                                            <input type="file" multiple id="ssi-upload" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div><!-- end col -->
        </div>
    <!-- end row -->
    }
</div>

<!-- Bootstrap modal Attr -->
<div class="modal fade" id="modal_form_attr" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <form action="#" id="form-attr" class="form-horizontal">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h3 class="modal-title">Thêm mới thuộc tính</h3>
                </div>
                <div class="modal-body form">
                    <input type="hidden" value="" name="id" />
                    <div class="form-body">
                        @Html.HiddenFor(m=>m.ProductID)
                        <div class="form-group">
                            <label class="control-label col-md-3">Nhóm thuộc tính</label>
                            <div class="col-md-9">
                                <select id="attr_group" data-rule-required="true" data-msg-required="Vui lòng chọn nhóm" onchange="load_attr(this)" name="attr_group" class="form-control">
                                    <option value="">Chọn nhóm thuộc tính</option>
                                    @foreach (var group in attrGroup)
                                    {
                                        <option value="@group.AttrGroupID">@group.AttrGroupName</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-3">Thuộc tính</label>
                            <div class="col-md-9">
                                <select id="attr_id" data-rule-required="true" data-msg-required="Vui lòng chọn thuộc tính" name="attr_id" class="form-control">
                                    <option value="">Chọn thuộc tính</option>
                                </select>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-3">Giá trị</label>
                            <div class="col-md-9">
                                <input data-rule-required="true" data-msg-required="Vui lòng nhập giá trị" name="attr_value" placeholder="Giá trị" class="form-control" type="text">
                            </div>
                        </div>
                    </div>

                </div>
                <div class="modal-footer">
                    <button type="submit" id="btnSave" class="btn btn-primary">Lưu</button>
                    <button type="button" class="btn btn-danger" data-dismiss="modal">Hủy</button>
                </div>
            </form>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->
<!-- End Bootstrap modal -->

<!-- Bootstrap modal Color -->
<div class="modal fade" id="modal_form_color" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <form action="#" id="form-color" class="form-horizontal">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h3 class="modal-title">Thêm mới màu</h3>
                </div>
                <div class="modal-body form">
                    <input type="hidden" value="" name="id" />
                    <div class="form-body">
                        <input type="hidden" value="@Model.ProductID" name="ProductID" />
                        <div class="form-group">
                            <label class="control-label col-md-3">Màu sản phẩm</label>
                            <div class="col-md-9">
                                <select id="color_id" data-rule-required="true" data-msg-required="Vui lòng chọn màu" name="color_id" class="form-control">
                                    <option value="">Chọn màu</option>
                                </select>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-3">Số lượng</label>
                            <div class="col-md-9">
                                <input data-rule-required="true" data-msg-required="Vui lòng nhập số lượng" data-rule-number="true" name="stock" placeholder="Giá trị" class="form-control" type="text">
                            </div>
                        </div>
                    </div>

                </div>
                <div class="modal-footer">
                    <button type="submit" id="btnSave" class="btn btn-primary">Lưu</button>
                    <button type="button" class="btn btn-danger" data-dismiss="modal">Hủy</button>
                </div>
            </form>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->
<!-- End Bootstrap modal -->


@helper DropdownTree(IEnumerable<GroupProduct> list)
{
    foreach (GroupProduct group in list)
    {
        if (group.GroupProducts1.Count == 0)
        {
            <li><a class="dropdown-item" href="#" data-value="@group.GroupID">@group.GroupName</a></li>
        }
        else
        {
            <li class="dropdown-submenu">
                <a href="#" data-value="@group.GroupID" class="dropdown-item">@group.GroupName</a>
                <ul class="dropdown-menu">
                    @DropdownTree(group.GroupProducts1)
                </ul>
            </li>
        }
    }
}

@section scripts{
    <script src="https://cdn.datatables.net/rowreorder/1.1.2/js/dataTables.rowReorder.min.js"></script>
    <script>
    $.validator.setDefaults({
        ignore: ''
    });
    $.validator.unobtrusive.parse($('#myForm'));
    $('input.autonumber').each(function () {
        $(this).rules('remove', 'number');
    });
    tinymce.init({
        selector: '#product-detail',
        theme: 'modern',
        height: 250, plugins: [
          'advlist autolink link image lists charmap print preview hr anchor pagebreak spellchecker',
          'searchreplace wordcount visualblocks visualchars code fullscreen insertdatetime media nonbreaking',
          'save table contextmenu directionality emoticons template paste textcolor'
        ],
        setup: function (ed) {
            ed.on('keyup', function (e) {
                tinyMceChange(ed);
            });
            ed.on('change', function (e) {
                tinyMceChange(ed);
            });
        }
    });
    $('.autonumber').autoNumeric('init', { pSign: 's', mDec: '0' });

    function tinyMceChange(ed) {
        tinyMCE.triggerSave();
        $("#" + ed.id).valid();
    }

    table_attr = $("#table-attr").DataTable({
        "processing": true, //Feature control the processing indicator.
        "serverSide": true, //Feature control DataTables' server-side processing mode
        // Load data for the table's content from an Ajax source
        "autoWidth": false,
        "ajax": {
            "url": "/Admin/Product/LoadAttr",
            "type": "GET",
            "data": { id: "@Model.ProductID" }
        },
        rowReorder: {
            selector: 'td:not(:last-child)'
        },
        "bPaginate": false,
        bFilter: false,
        bInfo: false,
        "columnDefs": [
            {
                "orderable": false,
                "searchable": false,
                "targets": [2],
                "data": null,
                "render": function (data, type, full, meta) {
                    if (type === 'display') {
                        data = '<div style="min-width:70px" class="btn-group" role="group"><button type="button" onclick="edit_attr(' + full[2] + ',' +@Model.ProductID +')" class="edit btn btn-info btn-sm"><span class="glyphicon glyphicon-edit" aria-hidden="true">Sửa</span></button><button type="button" onclick="delete_attr(' + full[2] + ',' +@Model.ProductID +')" class="delete btn btn-danger btn-sm m-l-5"><span class="glyphicon glyphicon-trash" aria-hidden="true"></span>Xóa</button></div>';
                    }

                    return data;
                }
            }
        ]
    });

    table_color = $("#table-color").DataTable({
        "processing": true, //Feature control the processing indicator.
        "serverSide": true, //Feature control DataTables' server-side processing mode
        // Load data for the table's content from an Ajax source
        "autoWidth": false,
        "ajax": {
            "url": "/Admin/Product/LoadColor",
            "type": "GET",
            "data": { id: "@Model.ProductID" }
        },
        rowReorder: {
            selector: 'td:not(:last-child)'
        },
        "bPaginate": false,
        bFilter: false,
        bInfo: false,
        "columnDefs": [
            {
                "orderable": false,
                "searchable": false,
                "targets": [2],
                "data": null,
                "render": function (data, type, full, meta) {
                    if (type === 'display') {
                        data = '<div style="min-width:70px" class="btn-group" role="group"><button type="button" onclick="edit_color(' + full[2] + ',' +@Model.ProductID +')" class="edit btn btn-info btn-sm"><span class="glyphicon glyphicon-edit" aria-hidden="true">Sửa</span></button><button type="button" onclick="delete_color(' + full[2] + ',' +@Model.ProductID +')" class="delete btn btn-danger btn-sm m-l-5"><span class="glyphicon glyphicon-trash" aria-hidden="true"></span>Xóa</button></div>';
                    }

                    return data;
                }
            }
        ]
    });

        table_image = $("#table-image").DataTable({
            "processing": true, //Feature control the processing indicator.
            "serverSide": true, //Feature control DataTables' server-side processing mode
            // Load data for the table's content from an Ajax source
            "autoWidth": false,
            "ajax": {
                "url": "/Admin/Product/LoadImage",
                "type": "GET",
                "data": { id: "@Model.ProductID" }
            },
            "bPaginate": false,
            bFilter: false,
            bInfo: false,
            "columnDefs": [
                {
                    "orderable": false,
                    "searchable": false,
                    "targets": [2],
                    "data": null,
                    "className": "align-center",
                    "render": function (data, type, full, meta) {
                        if (type === 'display') {
                            data = '<div style="min-width:70px" class="btn-group" role="group"><button type="button" onclick="delete_img(' + full[1] + ',' +@Model.ProductID +')" class="delete btn btn-danger btn-sm m-l-5"><span class="glyphicon glyphicon-trash" aria-hidden="true"></span>Xóa</button></div>';
                        }

                        return data;
                    }
                },
                {
                    "targets": 1,
                    "render": function (data, type, full, meta) {
                        return full[0];
                    }
                },
                {
                    "targets": 0,
                    "className": "align-center",
                    "render": function (data, type, full, meta) {
                        return '<img src="' + data + '?w=150"/>';
                    }
                }
            ]
        });

    table_attr.on('row-reorder', function (e, diff, edit) {
        alert(JSON.stringify(diff));
    });

    var save_method;

    function reload_table(type) {
        if (type == 'attr') {
            table_attr.ajax.reload(null, false); //reload datatable ajax
        } else if(type == 'color') {
            table_color.ajax.reload(null, false); //reload datatable ajax
        } else if(type == 'image'){
            table_image.ajax.reload(null, false); //reload datatable ajax
        }
    }


    function add_attr() {
        save_method = 'add';
        $('#form-attr [name="attr_group"]').parent().parent().show();
        $('#form-attr [name="attr_id"]').parent().parent().show();
        $("#attr_group").val($("#attr_group option:first").val()).change();
        $('#form-attr')[0].reset(); // reset form on modals
        $('#modal_form_attr').modal('show'); // show bootstrap modal
        $('#form-attr .modal-title').text('Thêm mới'); // Set Title to Bootstrap modal title
    }

    function add_color() {
        save_method = 'add';
        $('#form-color [name="color_id"]').parent().parent().show();
        $('#form-color')[0].reset(); // reset form on modals
        $.get('/Admin/Product/GetListColor', { id: '@Model.ProductID', available:true }, function (data) {
            $('#color_id').html(data);
        });
        $('#modal_form_color').modal('show'); // show bootstrap modal
        $('#form-color .modal-title').text('Thêm mới'); // Set Title to Bootstrap modal title
    }

        function edit_attr(attr_id, product_id) {
            save_method = 'edit';
            $('#form-attr [name="attr_group"]').parent().parent().hide();
            $('#form-attr [name="attr_id"]').parent().parent().hide();
            $('#form-attr')[0].reset(); // reset form on modals
            $.ajax({
                url: '/Admin/Product/GetProductAttr',
                type: 'GET',
                data : {product_id: product_id,attr_id:attr_id},
                dataType: "JSON",
                success: function (data) {
                    $('#form-attr [name="attr_group"]').val(data.data.attr_group);
                    $('#form-attr [name="attr_value"]').val(data.data.attr_value);
                    $.get('/Admin/Product/GetListAttr', { id: data.data.attr_group, product_id : '@Model.ProductID', available:false }, function (list) {
                        $('#attr_id').html(list);
                        $('#attr_id').val(data.data.attr_id);
                    });
                    $('#modal_form_attr').modal('show');
                    $('#form-attr .modal-title').text('Chỉnh sửa: ' + data.data.attr_text); // Set Title to Bootstrap modal title
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert('Error get data from ajax');
                }
            });
        }

        function edit_color(color_id, product_id) {
            save_method = 'edit';
            $('#form-attr')[0].reset(); // reset form on modals
            $.ajax({
                url: '/Admin/Product/GetProductColor',
                type: 'GET',
                data: { product_id: product_id, color_id: color_id},
                dataType: "JSON",
                success: function (data) {
                    $('#form-color [name="color_id"]').parent().parent().hide();
                    $.get('/Admin/Product/GetListColor', { id: '@Model.ProductID', available:false }, function (list) {
                        $('#color_id').html(list);
                        $('#color_id').val(data.data.color_id);
                    });
                    $('#form-color [name="stock"]').val(data.data.stock);
                    $('#modal_form_color').modal('show');
                    $('#form-color .modal-title').html('Chỉnh sửa: <b>Màu ' + data.data.color_name + '</b>'); // Set Title to Bootstrap modal title
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert('Error get data from ajax');
                }
            });
        }

        function save_attr() {
            var url;
            if(save_method == 'add'){
                url = '/Admin/Product/InsertAttr';
            } else{
                url = '/Admin/Product/UpdateAttr';
            }

            $.ajax({
                url: url,
                method: 'POST',
                data: {
                    ProductID: '@Model.ProductID',
                AttrID: $('select[name=attr_id] option:selected').val(),
                Value: $('input[name=attr_value]').val(),
            },
            dataType: "JSON",
            success: function (data) {
                if (data.status) {
                    var title = '';
                    var text = '';
                    if (save_method == 'add') {
                        title = 'Đã thêm';
                        text = 'Bạn vừa thêm 1 thuộc tính mới.';
                    } else {
                        title = 'Đã sửa';
                        text = 'Bạn vừa sửa đổi thuộc tính này.';
                    }
                    swal({
                        title: title,
                        text: text,
                        type: "success",
                        timer: 1000
                    });
                    $('#modal_form_attr').modal('hide');
                    reload_table('attr');
                } else {
                    swal("Lỗi!", data.message, "error");
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                alert('Error adding / update data');
            }

        });
    }

    function save_color() {
        var url;
        if (save_method == 'add') {
            url = '/Admin/Product/InsertColor';
        } else {
            url = '/Admin/Product/UpdateColor';
        }

        $.ajax({
            url: url,
            method: 'POST',
            data: {
                ProductID: '@Model.ProductID',
                ColorID: $('#form-color select[name=color_id] option:selected').val(),
                Stock: $('#form-color input[name=stock]').val(),
            },
            dataType: "JSON",
            success: function (data) {
                if (data.status) {
                    var title = '';
                    var text = '';
                    if (save_method == 'add') {
                        title = 'Đã thêm';
                        text = 'Bạn vừa thêm 1 màu mới vào sản phẩm.';
                    } else {
                        title = 'Đã sửa';
                        text = 'Bạn vừa sửa đổi màu.';
                    }
                    swal({
                        title: title,
                        text: text,
                        type: "success",
                        timer: 1000
                    });
                    $('#modal_form_color').modal('hide');
                    reload_table('color');
                } else {
                    swal("Lỗi!", data.message, "error");
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                alert('Error adding / update data');
            }

        });
    }

    function load_attr(item) {
        $.get('/Admin/Product/GetListAttr', { id: item.value, product_id: '@Model.ProductID', available:true }, function (data) {
            $('#attr_id').html(data);
        });
    }

    function delete_attr(attr_id, product_id) {
        swal({
            title: "Bạn chắc chắn xóa?",
            text: "Khi đã xóa bạn không thể khôi phục lại!!",
            type: "warning",
            showCancelButton: true,
            confirmButtonClass: "btn-danger",
            confirmButtonText: "Đồng ý!",
            cancelButtonText: "Hủy",
            closeOnConfirm: false
        },
        function (isConfirm) {
            if (isConfirm) {
                $.ajax({
                    url: "/Admin/Product/DeleteAttr",
                    type: "POST",
                    data: { id: product_id, attr_id: attr_id },
                    success: function (data) {
                        if (data == "success") {
                            //if success reload ajax table
                            $('#modal_form_attr').modal('hide');
                            swal({
                                title: 'Đã xóa!',
                                text: 'Thuộc tính này đã được xóa thành công!!!',
                                type: "success",
                                timer: 800
                            });
                            reload_table('attr');
                        } else {
                            swal("Thất bại!", "Có lỗi xảy ra, vui lòng thử lại", "error");
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        swal("Thất bại!", "Có lỗi xảy ra, vui lòng thử lại", "error");
                    }
                });
            }
        });
    }

    function delete_img(img_id, product_id) {
        swal({
            title: "Bạn chắc chắn xóa?",
            text: "Khi đã xóa bạn không thể khôi phục lại!!",
            type: "warning",
            showCancelButton: true,
            confirmButtonClass: "btn-danger",
            confirmButtonText: "Đồng ý!",
            cancelButtonText: "Hủy",
            closeOnConfirm: false
        }, function (is_confirm) {
            if (is_confirm) {
                $.post("/Admin/Product/DeleteImage", { ImageID: img_id, ProductID:product_id }, function (status) {
                    if (status == 'success') {
                        swal({
                            title: 'Đã xóa!',
                            text: 'Chúc mừng bạn đã xóa thành công!!!',
                            type: "success",
                            timer: 800
                        });
                        reload_table('image');
                    } else {
                        swal("Lỗi!", "Đã có lỗi xảy ra, vui lòng kiểm tra lại", "error");
                    }
                });
            }
        });
    }

    function delete_color(color_id, product_id) {
        swal({
            title: "Bạn chắc chắn xóa?",
            text: "Khi đã xóa bạn không thể khôi phục lại!!",
            type: "warning",
            showCancelButton: true,
            confirmButtonClass: "btn-danger",
            confirmButtonText: "Đồng ý!",
            cancelButtonText: "Hủy",
            closeOnConfirm: false
        },
        function (isConfirm) {
            if (isConfirm) {
                $.ajax({
                    url: "/Admin/Product/DeleteColor",
                    type: "POST",
                    dataType: "JSON",
                    data: { ProductID: product_id, ColorID: color_id },
                    success: function (data) {
                        if (data.status) {
                            $('#modal_form_color').modal('hide');
                            swal("Đã xóa!", "Màu này đã được xóa khỏi sản phẩm thành công!!!", "success");
                            reload_table('color');
                        } else {
                            swal("Thất bại!", data.message, "error");
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        swal("Thất bại!", "Có lỗi xảy ra, vui lòng thử lại", "error");
                    }
                });
            }
        });
    }

    $('#form-attr').validate({
        errorPlacement: function (error, element) {
            error.appendTo(element.parent());
        },
        submitHandler: function () {
            save_attr();
        }
    });

    $('#form-color').validate({
        errorPlacement: function (error, element) {
            error.appendTo(element.parent());
        },
        submitHandler: function () {
            save_color();
        }
    });

    $('#myForm').submit(function (e) {
        var form = $(this);
        if (form.valid()) {
            form.find('input.autonumber').each(function () {
                var self = $(this);
                var v = self.autoNumeric('get');
                self.val(v);
            });
        }
    });
    //Xử lý chọn nhóm sản phẩm
    $('ul#list-group.dropdown-menu a').click(function (e) {
        e.preventDefault();
        $submitInput = $(this).closest('.dropdown-submit-input');
        $submitInput.find('input').val($(this).data('value'));
        $submitInput.find('button').html($(this).text() + ' <span class="caret"></span>');
    });

    $('#ssi-upload').ssi_uploader({
        url: '/admin/product/imageupload',
        data:{product_id: '@Model.ProductID'},
        locale: 'vi',
        allowed: ['png', 'jpg', 'gif'],
        errorHandler: {
            method: function (msg, type) {
                swal({
                    title: msg,
                    type: 'error',
                    timer: 1500
                });
            },
            success: 'success',
            error: 'error'
        },
        onEachUpload: function (fileInfo) {
            console.log(fileInfo);
        },
        responseValidation:{
            validationKey: 'status',
            resultKey: 'message',
            success: 'success',
            error: 'error'
        },
        onUpload: function () {
            reload_table('image');
        },
        maxFileSize: 5//mb
    });

    $('.ssi-button').on('click', function () {
        return false;
    });
    </script>
}

